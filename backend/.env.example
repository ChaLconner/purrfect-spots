# ===========================================
# BACKEND ENVIRONMENT VARIABLES EXAMPLE
# ===========================================
# Copy this file to .env and fill in your actual values
# This file contains all environment variables needed for the backend

# ===========================================
# AUTHENTICATION CONFIGURATION
# ===========================================
# Google OAuth Configuration
# Get these values from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your_google_client_id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your_google_client_secret

# JWT Configuration
# Generate a strong secret key for JWT tokens
JWT_SECRET=your_jwt_secret_key_here

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# Supabase Configuration
# Get these values from: https://supabase.com/dashboard
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_KEY=your_supabase_anon_key_here
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# Optional: Direct PostgreSQL Connection
# If using direct PostgreSQL instead of Supabase
DATABASE_URL=postgresql://user:password@host:port/database

# ===========================================
# CLOUD STORAGE CONFIGURATION
# ===========================================
# AWS S3 Configuration
# Get these values from: https://console.aws.amazon.com/iam/
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_REGION=ap-southeast-2
AWS_S3_BUCKET=your_s3_bucket_name

# ===========================================
# AI/ML SERVICES CONFIGURATION
# ===========================================
# Google Cloud Vision API Configuration
# Option 1: Use service account key file
GOOGLE_VISION_KEY_PATH=keys/google_vision.json
# Option 2: Set service account content directly (for deployment)
# GOOGLE_VISION_SERVICE_ACCOUNT={"type": "service_account", ...}

# Google AI Studio Configuration (optional - for Gemini)
# Get this from: https://aistudio.google.com/app/apikey
GOOGLE_AI_API_KEY=your_google_ai_api_key_here

# ===========================================
# API CONFIGURATION
# ===========================================
# CORS Configuration
# Comma-separated list of allowed origins
# The backend automatically includes common origins and Vercel deployment URLs
# For development: http://localhost:3000,http://localhost:5173
# For production: https://your-frontend-domain.vercel.app
# Additional origins can be added here:
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,https://purrfect-spots.vercel.app

# ===========================================
# SERVER CONFIGURATION
# ===========================================
# Server port
PORT=8000

# Debug mode
# Set to False in production
DEBUG=False

# Environment
ENVIRONMENT=development

# ===========================================
# SECURITY NOTES
# ===========================================
# 1. Never commit actual API keys or secrets to version control
# 2. Use different credentials for development and production
# 3. Regularly rotate secrets and monitor API usage
# 4. Store service account files securely
# 5. Use HTTPS in production
# 6. Implement proper error handling to avoid leaking secrets